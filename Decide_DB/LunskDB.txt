"""
	The 'friends' table comes with 3 seperate columns. 
		friends_id is for the friends id number
		Fk_user is for the users id number
		status is for the status of Fk_user's and friends_id's relationship
			0 = Pending
			1 = Accepted
"""
--
-- Dumping data for table 'Friends'
--

DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `addFriend`(IN userid int(11), IN friendid int(11), IN newstatus int(1))
BEGIN
	INSERT INTO Friends (Fk_user, Fk_friend, status) VALUES (userid, friendid, newstatus);
END ;;
DELIMITER ;


DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `getFriends`(IN userid int(11))
BEGIN
	SELECT u.firstname, u.lastname, u.email
    FROM Friends f JOIN User u ON u.user_id=f.Fk_friend
    WHERE f.Fk_user = userid;
END ;;
DELIMITER ;


DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `deleteFriend`(IN userid int(11), IN friendid int(11))
BEGIN
	DELETE from Friends
    WHERE Fk_user = userid AND Fk_friend = friendid;
END ;;
DELIMITER ;


DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `updateFriend`(IN friendid int(11), IN userid int(11), IN newstatus int(11))
BEGIN
	UPDATE Friends
   	SET status = newstatus 
	WHERE Fk_friend = friendid AND Fk_user = userid;
END ;;
DELIMITER ;


DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `getPendingFriends`(IN userid int(11))
BEGIN
	SELECT u.firstname, u.lastname, u.email
    FROM Friends f JOIN User u ON u.user_id=f.Fk_user
    WHERE f.Fk_friend = userid AND f.status = 0;
END ;;
DELIMITER ;


# Groups Procedures


CREATE DEFINER=`root`@`%` PROCEDURE `getGroup`(IN groupName varchars(90))
BEGIN 
	SELECT group_name
	FROM Groups
	WHERE group_name = groupname; 
END ;;
